# -*- coding: utf-8 -*-
"""
/***************************************************************************
 RiverBankErosionAccretion_V2Dialog
                                 A QGIS plugin
 RiverBank Erosion and Accretion Analyzer v2 is an advanced QGIS plugin designed to quantify riverbank dynamics by analyzing spatial data over multiple time periods. It provides automated workflows for calculating, visualizing, and reporting erosion and accretion zones along a riverâ€™s course.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-10-24
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Srija Roy
        email                : roysrija7@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'RiverBankErosionAccretion_V2_dialog_base.ui'))


class RiverBankErosionAccretion_V2Dialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(RiverBankErosionAccretion_V2Dialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
